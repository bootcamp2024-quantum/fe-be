services:
  webserver:
    container_name: webserver
    build:
      context: ./
      dockerfile: ./webserver/Dockerfile
    environment:
      SERVER_PORT: ${SERVER_PORT}
      PORT: ${PORT}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./webserver/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - febe
    restart: on-failure

  backend:
    container_name: backend
    build:
      context: core-backend
      target: base
      args:
        DJANGO_ENV: development
    environment:
      SECRET_KEY: ${SECRET_KEY}
      SERVER_PORT: ${SERVER_PORT}
      DJANGO_CORS_ALLOWED_ORIGINS: ${DJANGO_CORS_ALLOWED_ORIGINS}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
    volumes:
      - ./media:/usr/src/app/media
    command: /bin/bash -c "exec invoke run-prod"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - febe

  db:
    container_name: db
    image: postgres:15.6
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /home/ubuntu/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - febe

networks:
  febe:
    driver: bridge
